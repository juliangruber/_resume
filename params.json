{"name":"Julian Gruber","tagline":"My resume","body":"Hi, my name is Julian Gruber.\r\n\r\nI was **born** in Jan 1991 and currently live in Munich, Germany.\r\n\r\nI finished **school** with a 1.9 / A-.\r\n\r\nI got an extra sheet honoring all my **extra curricular** achievements. I **gave courses**\r\nin HTML, CSS and PHP and **lead the team** behind the latest version of\r\n[the school's website](http://jakob-brucker-gymnasium.de/).\r\n\r\nI **studied** computer science at [Technical University Munich](http://www.tum.de) until I\r\nquit after 3rd semester. I am mostly **self taught**.\r\n\r\nI worked as a **freelancer** while in school, creating 2 websites.\r\n\r\nI worked as an **intern** for two startups and am now **employed** at the 2nd one.\r\nThere are 100 people working there and I made them use GIT, Graphite and StatsD and write tests.\r\n\r\nI have 77 **open source** projects on\r\n[github](https://github.com/juliangruber), 62 modules in the\r\n[node package manager](http://npmjs.org/~juliangruber) and contribute to many\r\nother open source projects. I landed\r\n[a commit](https://github.com/joyent/node/commit/738347b90433a38538ab298bf38860e83a4abc53)\r\nin node core.\r\n\r\nI **gave a talk** at ux munich, a usability conference, about bleeding edge\r\nusability.\r\n\r\nI have the desire to take on **different hats**.\r\n\r\nI **speak and write** english, german and french (un peu).\r\n\r\nI **write** tests, JavaScript (browser &amp; node), C, C++, Ruby, C#,\r\nJava, HTML5 and CSS3 (and latin).\r\n\r\nI **store** stuff in LevelDB, Redis, MySQL, MongoDB, the cloud and my machine.\r\n\r\nI **&lt;3**\r\n\r\n* clean interfaces in code and design\r\n* small things that do one thing and do it well\r\n* simplifying by layering abstractions\r\n\r\nBut, what can I do for **you**?\r\n\r\n## Portfolio\r\n\r\n## Websites\r\n\r\n### Guidants\r\n\r\nThis is a realtime financial information platform I've been working on for\r\n[BoerseGo AG](http://boerse-go.ag):\r\n\r\n![guidants](https://dl.dropbox.com/s/uctk4kygm2bbw85/Screen%20Shot%202012-12-09%20at%204.13.44%20PM.png)\r\n\r\n[Check it out!](http://go.guidants.com)\r\n\r\n### Collab-tunes\r\n\r\nA drum editor using the WebAudio API.\r\n\r\n![collab-tunes](https://dl.dropbox.com/s/ntntlpaf5jm8m6z/Screen%20Shot%202012-12-09%20at%204.09.35%20PM.png)\r\n\r\n[Check it out](http://glowing-waterfall-3782.herokuapp.com/) (links are\r\nshareable! needs a recent chome &amp; might take a while to load the first\r\ntime).\r\n\r\n[And a simple synthesizer](http://juliangruber.com/synth.html) (needs a recent\r\nchrome).\r\n\r\nUsing: redis, node.js, expressjs, socket.io, stylus, jade, jquery, browserify\r\n\r\n### alrt.io\r\n\r\nQuickly create timers from your browsers via URLS, eg. this\r\n[3s timer](http://alrt.io/3s).\r\n\r\n![alrt.io](https://dl.dropbox.com/s/zx37hd68tncgmq4/Screen%20Shot%202012-12-09%20at%204.08.35%20PM.png)\r\n\r\nLinks: [alrt.io](http://alrt.io/) | [source](https://github.com/juliangruber/alrt.io)\r\n\r\nUsing: node.js, expressjs, jade\r\n\r\n### ghub.io\r\n\r\nAnother little tool useful for [node](http://nodejs.org) developers:\r\n\r\n![ghub.io](http://f.cl.ly/items/223t3y3k1o0q3j130o3G/Screen%20Shot%202013-04-09%20at%2010.54.22%20PM.png)\r\n\r\nLinks: [ghub.io](http://ghub.io) | [source](https://github.com/juliangruber/ghub.io)\r\n\r\n### auswertung\r\n\r\nA little interface to Graphite for the marketing department.\r\n\r\n![auswertung](http://f.cl.ly/items/02400n2W3v0i2R462d1Y/Screen%20Shot%202013-02-19%20at%202.19.14%20PM.png)\r\n\r\n### jakob-brucker-gymnasium.de\r\n\r\nI designed this, was team lead and main developer. Powered by a custom PHP CMS.\r\n\r\n![jakob-brucker-gymnasium.de](https://dl.dropbox.com/s/4xfil4vgdyxzo9m/Screen%20Shot%202012-12-09%20at%204.10.34%20PM.png)\r\n\r\n[Check it out!](http://jakob-brucker-gymnasium.de)\r\n\r\n### ritterschaft-zu-wasserstein.de\r\n\r\nI did this as a freelancer.\r\n\r\n![ritterschaft-zu-wasserstain.de](https://dl.dropbox.com/s/b8ohr2te9femgwv/Screen%20Shot%202012-12-09%20at%204.11.13%20PM.png)\r\n\r\n[Check it out!](http://ritterschaft-zu-wasserstein.de)\r\n\r\n### ff-replicator\r\n\r\nA little tech demo written at the Firefox OS App Days where I wanted to show\r\nsimple replication patterns that also worked offline.\r\n\r\n![ff-replicator](https://a248.e.akamai.net/camo.github.com/6cc60fce42569e4cfbed954e52e8cb0553b01c5d/687474703a2f2f662e636c2e6c792f6974656d732f3277316a30383241314d32393147314b334d324e2f53637265656e25323053686f74253230323031332d30322d30322532306174253230342e35312e3531253230504d2e706e67)\r\n\r\n[ff-replicator.jit.su](http://ff-replicator.jit.su) &amp; [source](https://github.com/juliangruber/ff-replicator)\r\n\r\n## Servers\r\n\r\n### review\r\n\r\n![review preview](https://a248.e.akamai.net/camo.github.com/054b61a93ae61870f892657f6c107f1f33eef544/687474703a2f2f662e636c2e6c792f6974656d732f334f317733593058326930733146314d323733782f53637265656e25323053686f74253230323031332d30312d3234253230617425323031322e35302e3338253230504d2e706e67)\r\n\r\nHost reviews of your sites in different resolutions to have a quick overview of everything in every resolution.\r\nSuper useful for checking responsive designs or if everything still renders correctly.\r\n\r\nRepo: [juliangruber/review](https://github.com/juliangruber/review) | [juliangruber/review-host](https://github.com/juliangruber/review-host)\r\n\r\n### traffic-light\r\n\r\nMonitor you servers with simple dynamic traffic-lights:\r\n\r\n![preview](https://raw.github.com/juliangruber/traffic-light/master/images/green.png)\r\n\r\nRepo: [juliangruber/traffic-light](https://github.com/juliangruber/traffic-light)\r\n\r\n### contre\r\n\r\nA continuous release tool that acts as a GIT repo server and lays repos out in a github-style directory structure\r\nwhenever you push to it. I created this for [component](https://github.com/component/component).\r\n\r\nRepo: [godmodelabs/contre](https://github.com/godmodelabs/contre)\r\n\r\n### statsc\r\n\r\nPush stats to StatsD from the browser!\r\n\r\nRepo: [godmodelabs/statsc](https://github.com/godmodelabs/statsc)\r\n\r\n### multilevel\r\n\r\nAccess a levelUp-instance from multiple processes. LevelDB's design forbids you to access a database instance from multiple processes. This (wip) exports the levelUp interface 1:1.\r\n\r\n```js\r\nvar db = multilevel.client('http://localhost:3000')\r\ndb.set('foo', 'bar')\r\n```\r\n\r\nRepo: [juliangruber/multilevel-http](https://github.com/juliangruber/multilevel-http), [juliangruber/multilevel](https://github.com/juliangruber/multilevel)\r\n\r\n### level-schedule\r\n\r\nA durable job scheduler based on LevelDB that transparently handles crashes.\r\n\r\n```js\r\nSchedule(db)\r\n  .job('print', function (payload) {\r\n    console.log(payload);\r\n  })\r\n  .run('print', { some : 'json' }, Date.now() + 5000);\r\n\r\n// => (after 5s) { some : 'json' }\r\n```\r\n\r\n[Source](https://github.com/juliangruber/level-schedule).\r\n\r\n### dashbo\r\n\r\nA frontend for the [graphite](http://graphite.wikidot.com/) graphing server with dashboards and other goodies.\r\n\r\n![dashbo](https://dl.dropbox.com/s/zb45sc344kf70g2/Screen%20Shot%202012-12-09%20at%204.15.20%20PM.png)\r\n\r\nRepo: [juliangruber/dashbo](https://github.com/juliangruber/dashbo)\r\n\r\n## Applications\r\n\r\n### jilla\r\n\r\nGeeking up JIRA by writing an efficient-to-use cli interface for it.\r\n\r\nEver wished, you could:\r\n\r\n```bash\r\n$ jilla ls\r\nWDSERVICE-78 <jgruber>  !! LessLinter\r\nPS-656       <jgruber>  !! Graphite installieren\r\nPS-480       <pkostoff>  ! Trailing stops\r\n```\r\n\r\nThis also does time loggin, search, resolve/close/etc.\r\n\r\nRepo: [godmodelabs/jilla](https://github.com/godmodelabs/jilla)\r\n\r\n### browser-run\r\n\r\nThe easiest way of running code in a browser environment.\r\n\r\n```bash\r\n$ echo \"console.log(document.location)\" | browser-run\r\n# => http://localhost:53227\r\n```\r\n\r\nJust pipe code into its stdin and it will output console-output on stdout.\r\n\r\n[Source](https://github.com/juliangruber/browser-run).\r\n\r\n### tapedeck\r\n\r\nRun tap(e) tests in your browser with tap output in your terminal\r\n\r\n\r\n```bash\r\n$ tapedeck test/*.js\r\nOpen up http://localhost:13379 in your browser\r\n\r\nTAP version 13\r\n# editable\r\nok 1 input changed\r\nok 2 stream received data\r\nok 3 el changed\r\n\r\n1..3\r\n# tests 3\r\n# pass  3\r\n\r\n# ok \r\n\r\n$ echo $?\r\n0\r\n```\r\n\r\nRepo: [juliangruber/tapedeck](https://github.com/juliangruber/tapedeck)\r\n\r\n## Libraries\r\n\r\nNode.js and browser libraries\r\n\r\n### level-store\r\n\r\nA streaming storage engine based on LevelDB.\r\n\r\nJust pipe a stream (e.g. from a download or a file) into it, read from any\r\nstream that is already stored or is written to, and resume where you left if\r\nsomething bad happened.\r\n\r\n```js\r\nrequest('http://google.com').pipe(store.createWriteStream('google'));\r\n```\r\n\r\n[Source](https://github.com/juliangruber/level-store).\r\n\r\n### level-capped\r\n\r\nAdd capped collections to LevelDB with 1 line of code!\r\n\r\n```js\r\ncap(db, 'some-key', 10);\r\n```\r\n\r\n[Source](https://github.com/juliangruber/level-capped).\r\n\r\n### leveled\r\n\r\nA node.js binding to [LevelDB](http://code.google.com/p/leveldb/) with focus on performance and a minimal api,\r\nallowing you to write databases in JavaScript.\r\n\r\n```js\r\nvar db = leveled('/tmp/db')\r\ndb.set('foo', 'bar')\r\n```\r\n\r\nRepo: [juliangruber/node-leveled](https://github.com/juliangruber/node-leveled)\r\n\r\n### fwd\r\n\r\nTaking the idea of piping streams into each other and applying that on the concept of EventEmitters.\r\n\r\n```js\r\n// with streams\r\nstreamA.pipe(streamB)\r\n// with fwd\r\nfwd(emitterA, emitterB)\r\n```\r\n\r\nRepo: [godmodelabs/fwd](https://github.com/godmodelabs/fwd)\r\n\r\n### supersize\r\n\r\nMake text as big as possible!\r\n\r\n![supersize](http://f.cl.ly/items/2i101H063L443q3M0g1t/Screen%20Shot%202013-04-09%20at%2011.12.49%20PM.png)\r\n\r\n[Source](https://github.com/juliangruber/supersize).\r\n\r\n### turn\r\n\r\nA source transformation tool that let converts a mixture of ES6 and lua into\r\nCommonJS code\r\n\r\n```js\r\nvar foo = import './foo.js'\r\nreturn function () {\r\n  return 'bar';\r\n}\r\n```\r\n\r\nconverts to\r\n\r\n```js\r\nvar foo = require('./foo.js');\r\nmodule.exports = function () {\r\n  return 'bar';\r\n};\r\n```\r\n\r\n[Source](https://github.com/juliangruber/turn).\r\n\r\n### encounter\r\n\r\n```js\r\n// count up from -2 to 2 in steps of 0.1 every 100ms\r\ncount()\r\n  .from(-2)\r\n  .to(2)\r\n  .step(0.1)\r\n  .every(100)\r\n  .start()\r\n  .on('tick', doSomething);\r\n```\r\n\r\n[Source](https://github.com/juliangruber/encounter).\r\n\r\n### misc\r\n\r\n* [spinner](https://github.com/godmodelabs/spinner)\r\n\r\n![spinner](http://i.imgur.com/Iyl0d.png)\r\n\r\n## Misc\r\n\r\n### llint.chocmixin\r\n\r\nA [Chocolat](http://chocolatapp.com/)-Mixin that reorders less/css lines by alphabet and importance.\r\n\r\nThis uses [llint](https://github.com/juliangruber/llint) and [parseless](https://github.com/juliangruber/parseless), my\r\nless/css parser.\r\n\r\nLink: [mixins.chocolatapp.com](http://mixins.chocolatapp.com/mixins/20/)\r\n\r\n### openmasse\r\n\r\nA bookmarklet that helps with opening many links at once.\r\n\r\nLinks: [website](http://juliangruber.github.com/openmasse/) | [repo](https://github.com/juliangruber/openmasse)\r\n\r\n### rayboy\r\n\r\nA raytracer I wrote for educational purposes in 9th grade. It's written in C++ and can only render colored spheres.\r\n\r\n![rayboy](http://i.imgur.com/oBHfn.png)\r\n\r\nRepo: [juliangruber/rayboy](https://github.com/juliangruber/rayboy)\r\n\r\n## Papers\r\n\r\n### introduction to erlang\r\n\r\n![excerpt](http://i.imgur.com/JXGR8.png)\r\n\r\nDownload: [paper](https://dl.dropbox.com/s/cyy9iv2y1rcqa3s/Ausarbeitung.pdf?dl=1)\r\n\r\n## Artworks\r\n\r\n### running death - the call of extinction\r\n\r\nI created the t-shirt and designed cover and logo based on pencil drawings by a friend.\r\n\r\n<img src=\"http://f.cl.ly/items/411q1L0g1b41260q2x2p/Image%202013.02.04%2010:43:08%20AM.png\" width=\"50%\">\r\n<img src=\"https://dl.dropbox.com/s/dultpww5r5y4unb/artwork_stripes_finalized.jpg\" width=\"50%\">\r\n\r\n### C'est moi:\r\n\r\n![julian](https://secure.gravatar.com/avatar/a010d5218f2c3d194dbbac9c5d14d0ad?s=420&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}